{{- range $shard, $e := until (int $.Values.shardCount) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: {{ $.Values.prosody.name }}
    scope: jitsi
    shard: {{ $shard | quote}}
  name: shard-{{ $shard }}-{{ $.Values.prosody.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: {{ $.Values.prosody.name }}
      scope: jitsi
      shard: {{ $shard | quote}}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: {{ $.Values.prosody.name }}
        scope: jitsi
        shard: {{ $shard | quote}}
      {{ if $.Values.prosody.monitoringEnable }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5280"
      {{ end }}
    spec:
    {{- with $.Values.prosody.extraPodSpec }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
      volumes:
        - name: prosody
          configMap:
            name: prosody
            items:
              - key: mod_prometheus.lua
                path: mod_prometheus.lua
              - key: mod_measure_stanza_counts.lua
                path: mod_measure_stanza_counts.lua
              - key: mod_measure_client_presence.lua
                path: mod_measure_client_presence.lua
      containers:
        - name: prosody
        {{- with $.Values.prosody.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          image: {{ $.Values.prosody.image }}
          imagePullPolicy: {{ $.Values.prosody.imagePullPolicy }}
          {{ if $.Values.prosody.monitoringEnable -}}
          ports:
            - name: metrics
              containerPort: 5280
          {{ end -}}
          readinessProbe:
            ## the command that is called obeys standard exit codes
            exec:
              command:
                - prosodyctl
                - --config
                - /config/prosody.cfg.lua
                - status
          volumeMounts:
          {{ if $.Values.prosody.monitoringEnable -}}
          # add-ons that allow exporting of metrics to prometheus (mod_prometheus.lua)
          # or enrich the available stats (mod_measure_stanza_counts.lua,
          # mod_measure_client_presence.lua)
          - name: prosody
            mountPath: /prosody-plugins-custom/mod_prometheus.lua
            subPath: mod_prometheus.lua
          - name: prosody
            mountPath: /usr/lib/prosody/modules/mod_measure_stanza_counts.lua
            subPath: mod_measure_stanza_counts.lua
          - name: prosody
            mountPath: /usr/lib/prosody/modules/mod_measure_client_presence.lua
            subPath: mod_measure_client_presence.lua
          {{ end -}}
          env:
            - name: XMPP_DOMAIN
              value: meet.jitsi
            - name: XMPP_AUTH_DOMAIN
              value: auth.meet.jitsi
            - name: XMPP_MUC_DOMAIN
              value: muc.meet.jitsi
            - name: XMPP_INTERNAL_MUC_DOMAIN
              value: internal-muc.meet.jitsi
            - name: XMPP_MUC_MODULES
              value: muc_meeting_id,muc_domain_mapper
            - name: JICOFO_COMPONENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jitsi-config
                  key: JICOFO_COMPONENT_SECRET
            - name: JVB_AUTH_USER
              value: jvb
            - name: JVB_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jitsi-config
                  key: JVB_AUTH_PASSWORD
            - name: JICOFO_AUTH_USER
              value: focus
            - name: JICOFO_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jitsi-config
                  key: JICOFO_AUTH_PASSWORD
            - name: TZ
              valueFrom:
                secretKeyRef:
                  key: TZ
                  name: jitsi-config
            {{ if $.Values.prosody.monitoringEnable }}
            # activate add-ons that enrich the available stats of prosody
            - name: GLOBAL_MODULES
              value: statistics,alert,prometheus,measure_stanza_counts,measure_client_presence
            # config to allow exporting metrics in prometheus format by prometheus add-on
            - name: GLOBAL_CONFIG
              value: statistics = "internal";\nstatistics_interval = 15;
            {{ end }}
            # - name: TURN_HOST
            #   valueFrom:
            #     secretKeyRef:
            #       name: jitsi-config
            #       key: TURN_HOST
            # - name: TURN_PORT
            #   valueFrom:
            #     secretKeyRef:
            #       name: jitsi-config
            #       key: TURN_PORT
            # - name: TURNS_PORT
            #   valueFrom:
            #     secretKeyRef:
            #       name: jitsi-config
            #       key: TURNS_PORT
            - name: PUBLIC_URL
              valueFrom:
                secretKeyRef:
                  name: jitsi-config
                  key: PUBLIC_URL
{{ end }}
